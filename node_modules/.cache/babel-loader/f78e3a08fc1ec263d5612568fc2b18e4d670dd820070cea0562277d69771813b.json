{"ast":null,"code":"import { db } from '../firebaseConfig';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc, query, where, orderBy } from 'firebase/firestore';\nconst BOOKS_COLLECTION = 'books';\n\n// إضافة كتاب جديد\nexport const addBook = async bookData => {\n  try {\n    const docRef = await addDoc(collection(db, BOOKS_COLLECTION), {\n      ...bookData,\n      createdAt: new Date().toISOString()\n    });\n    return {\n      success: true,\n      id: docRef.id\n    };\n  } catch (error) {\n    console.error('خطأ في إضافة الكتاب:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// جلب جميع الكتب\nexport const getAllBooks = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, BOOKS_COLLECTION));\n    const books = [];\n    querySnapshot.forEach(doc => {\n      books.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return {\n      success: true,\n      data: books\n    };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// جلب الكتب المجانية\nexport const getFreeBooks = async () => {\n  try {\n    const q = query(collection(db, BOOKS_COLLECTION), where('isFree', '==', true), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach(doc => {\n      books.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return {\n      success: true,\n      data: books\n    };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب المجانية:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// جلب الكتب المدفوعة\nexport const getPaidBooks = async () => {\n  try {\n    const q = query(collection(db, BOOKS_COLLECTION), where('isFree', '==', false), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach(doc => {\n      books.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return {\n      success: true,\n      data: books\n    };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب المدفوعة:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// تحديث كتاب\nexport const updateBook = async (bookId, updatedData) => {\n  try {\n    const bookRef = doc(db, BOOKS_COLLECTION, bookId);\n    await updateDoc(bookRef, {\n      ...updatedData,\n      updatedAt: new Date().toISOString()\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('خطأ في تحديث الكتاب:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// حذف كتاب\nexport const deleteBook = async bookId => {\n  try {\n    await deleteDoc(doc(db, BOOKS_COLLECTION, bookId));\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('خطأ في حذف الكتاب:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// جلب الكتب حسب التصنيف\nexport const getBooksByCategory = async category => {\n  try {\n    const q = query(collection(db, BOOKS_COLLECTION), where('category', '==', category), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach(doc => {\n      books.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return {\n      success: true,\n      data: books\n    };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب حسب التصنيف:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["db","collection","addDoc","getDocs","doc","updateDoc","deleteDoc","query","where","orderBy","BOOKS_COLLECTION","addBook","bookData","docRef","createdAt","Date","toISOString","success","id","error","console","message","getAllBooks","querySnapshot","books","forEach","push","data","getFreeBooks","q","getPaidBooks","updateBook","bookId","updatedData","bookRef","updatedAt","deleteBook","getBooksByCategory","category"],"sources":["/home/ubuntu/arabic-research-service/src/services/booksService.js"],"sourcesContent":["import { db } from '../firebaseConfig';\nimport { \n  collection, \n  addDoc, \n  getDocs, \n  doc, \n  updateDoc, \n  deleteDoc, \n  query, \n  where, \n  orderBy \n} from 'firebase/firestore';\n\nconst BOOKS_COLLECTION = 'books';\n\n// إضافة كتاب جديد\nexport const addBook = async (bookData) => {\n  try {\n    const docRef = await addDoc(collection(db, BOOKS_COLLECTION), {\n      ...bookData,\n      createdAt: new Date().toISOString()\n    });\n    return { success: true, id: docRef.id };\n  } catch (error) {\n    console.error('خطأ في إضافة الكتاب:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// جلب جميع الكتب\nexport const getAllBooks = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, BOOKS_COLLECTION));\n    const books = [];\n    querySnapshot.forEach((doc) => {\n      books.push({ id: doc.id, ...doc.data() });\n    });\n    return { success: true, data: books };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// جلب الكتب المجانية\nexport const getFreeBooks = async () => {\n  try {\n    const q = query(\n      collection(db, BOOKS_COLLECTION), \n      where('isFree', '==', true),\n      orderBy('createdAt', 'desc')\n    );\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach((doc) => {\n      books.push({ id: doc.id, ...doc.data() });\n    });\n    return { success: true, data: books };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب المجانية:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// جلب الكتب المدفوعة\nexport const getPaidBooks = async () => {\n  try {\n    const q = query(\n      collection(db, BOOKS_COLLECTION), \n      where('isFree', '==', false),\n      orderBy('createdAt', 'desc')\n    );\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach((doc) => {\n      books.push({ id: doc.id, ...doc.data() });\n    });\n    return { success: true, data: books };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب المدفوعة:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// تحديث كتاب\nexport const updateBook = async (bookId, updatedData) => {\n  try {\n    const bookRef = doc(db, BOOKS_COLLECTION, bookId);\n    await updateDoc(bookRef, {\n      ...updatedData,\n      updatedAt: new Date().toISOString()\n    });\n    return { success: true };\n  } catch (error) {\n    console.error('خطأ في تحديث الكتاب:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// حذف كتاب\nexport const deleteBook = async (bookId) => {\n  try {\n    await deleteDoc(doc(db, BOOKS_COLLECTION, bookId));\n    return { success: true };\n  } catch (error) {\n    console.error('خطأ في حذف الكتاب:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n// جلب الكتب حسب التصنيف\nexport const getBooksByCategory = async (category) => {\n  try {\n    const q = query(\n      collection(db, BOOKS_COLLECTION), \n      where('category', '==', category),\n      orderBy('createdAt', 'desc')\n    );\n    const querySnapshot = await getDocs(q);\n    const books = [];\n    querySnapshot.forEach((doc) => {\n      books.push({ id: doc.id, ...doc.data() });\n    });\n    return { success: true, data: books };\n  } catch (error) {\n    console.error('خطأ في جلب الكتب حسب التصنيف:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}